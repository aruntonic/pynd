{
    "docs": [
        {
            "location": "/",
            "text": "pynd - search within Python code\n\u00b6\n\n\nYou say it like find, but with a p. pind.\n\n\nInstallation\n\u00b6\n\n\nWe recommend installation with pip.\n\n\n$ pip install pynd\n$ pynd -h\n\n\n\n\n\n\n\nWarning\n\n\npynd is in very early stages of development. Almost anything could change\nwithout warning. You have been warned ;-)\n\n\n\n\nWhat & Why?\n\u00b6\n\n\nPynd is a bit like grep, but it understand Python syntax. This means you can\ndo things like search within docstrings only or list and search function names.\n\n\nUsage Examples\n\u00b6\n\n\nListing and searching within Python\n\u00b6\n\n\nList all the Python classes in every Python file under the current working\ndirectory.\n\n\n$ pynd --class\n\n\n\n\n\nFind all classes that match a pattern.\n\n\n$ pynd MyClass --class\n\n\n\n\n\nThe \n--class\n argument can be replaced or used in combination with other node\ntypes. For example, find all functions or classes that contain the word \ntest\n.\n\n\n$ pynd \ntest\n --class --def --ignore-case\n\n\n\n\n\nDocstrings\n\u00b6\n\n\nSearching within docstrings is simple with pynd. It works in a similar way\nas the other node matches, but it will output the full docstring and the \nclass or function that it is attached to.\n\n\n$ pynd TODO --doc\n\n\n\n\n\nThe above search will find all docstrings that contain TODO. If no term is \nprovided, then all docstrings will be output.\n\n\nSupported Node Types\n\u00b6\n\n\npynd currently supports the following node types.\n\n\n\n\n--class\n - Matches classes.\n\n\n--def\n - All function definitions.\n\n\n--import\n - matches import statements\n\n\n--doc\n - matches within docstrings\n\n\n\n\nShow full usage\n\u00b6\n\n\nusage\n:\n \npynd\n \n[-\nh\n]\n \n[--\nignore\n-\ndir\n \n[\nIGNORE_DIR\n \n[\nIGNORE_DIR\n \n...]]]\n \n[--\nverbose\n]\n\n            \n[--\ndebug\n]\n \n[--\nignore\n-\ncase\n]\n \n[--\nfiles\n-\nwith\n-\nmatches\n]\n \n[-\nd\n]\n \n[-\nc\n]\n \n[-\nf\n]\n\n            \n[-\ni\n]\n\n            \n[\nPATTERN\n]\n \n[\nFILES\n \nOR\n \nDIRECTORIES\n \n[\nFILES\n \nOR\n \nDIRECTORIES\n \n...]]\n\n\n\nSearch\n \nfor\n \nPATTERN\n \nin\n \neach\n \nPython\n \nfile\n \nin\n \nfilesystem\n \nfrom\n \nthe\n \ncurrent\n\n\ndirectory\n \ndown\n.\n \nIf\n \nany\n \nfiles\n \nor\n \ndirectories\n \nare\n \nspecified\n \nthen\n \nonly\n \nthose\n \nare\n\n\nchecked\n.\n\n\n\npositional\n \narguments\n:\n\n  \nPATTERN\n               \nThe\n \npattern\n \nto\n \nmatch\n \nagainst\n.\n \nThis\n \nmust\n \nbe\n \na\n \nvalid\n\n                        \nPython\n \nregular\n \nexpression\n.\n\n  \nFILES\n \nOR\n \nDIRECTORIES\n  \nA\n \nfile\n \nor\n \ndirectory\n \nto\n \nlimit\n \nthe\n \nsearch\n \nscope\n.\n \nThis\n\n                        \ncan\n \nbe\n \nprovided\n \nmultiple\n \ntimes\n.\n\n\n\noptional\n \narguments\n:\n\n  \n-\nh\n,\n \n--\nhelp\n            \nshow\n \nthis\n \nhelp\n \nmessage\n \nand\n \nexit\n\n  \n--\nignore\n-\ndir\n \n[\nIGNORE_DIR\n \n[\nIGNORE_DIR\n \n...]]\n\n                        \nA\n \npattern\n \nto\n \nexclude\n \ndirectories\n.\n \nThis\n \nmust\n \nbe\n \na\n \nvalid\n\n                        \nPython\n \nregular\n \nexpression\n.\n \nIt\n \ncan\n \nbe\n \nprovided\n \nmultiple\n\n                        \ntimes\n.\n\n  \n--\nverbose\n             \nExplain\n \nwhat\n \nis\n \nhappening\n.\n\n  \n--\ndebug\n               \nOutput\n \nexcessively\n \nto\n \nmake\n \ndebugging\n \neasier\n\n  \n--\nignore\n-\ncase\n         \nMake\n \nall\n \nthe\n \nregular\n \nexpression\n \nmatching\n \ncase\n\n                        \ninsesitive\n.\n\n  \n--\nfiles\n-\nwith\n-\nmatches\n  \nDon\n'\nt\n \noutput\n \nall\n \nthe\n \nresults\n,\n \njust\n \nthe\n \npaths\n \nto\n \nfiles\n\n                        \nthat\n \ncontain\n \na\n \nresult\n.\n\n  \n-\nd\n,\n \n--\ndoc\n             \nMatch\n \nclass\n \nand\n \nfunction\n \ndocstrings\n.\n\n  \n-\nc\n,\n \n--\nclass\n           \nMatch\n \nclass\n \nnames\n.\n\n  \n-\nf\n,\n \n--\ndef\n             \nMatch\n \nfunction\n \nnames\n.\n\n  \n-\ni\n,\n \n--\nimport\n          \nMatch\n \nimported\n \npackage\n \nnames.",
            "title": "Home"
        },
        {
            "location": "/#pynd-search-within-python-code",
            "text": "You say it like find, but with a p. pind.",
            "title": "pynd - search within Python code"
        },
        {
            "location": "/#installation",
            "text": "We recommend installation with pip.  $ pip install pynd\n$ pynd -h   Warning  pynd is in very early stages of development. Almost anything could change\nwithout warning. You have been warned ;-)",
            "title": "Installation"
        },
        {
            "location": "/#what-why",
            "text": "Pynd is a bit like grep, but it understand Python syntax. This means you can\ndo things like search within docstrings only or list and search function names.",
            "title": "What &amp; Why?"
        },
        {
            "location": "/#usage-examples",
            "text": "",
            "title": "Usage Examples"
        },
        {
            "location": "/#listing-and-searching-within-python",
            "text": "List all the Python classes in every Python file under the current working\ndirectory.  $ pynd --class  Find all classes that match a pattern.  $ pynd MyClass --class  The  --class  argument can be replaced or used in combination with other node\ntypes. For example, find all functions or classes that contain the word  test .  $ pynd  test  --class --def --ignore-case",
            "title": "Listing and searching within Python"
        },
        {
            "location": "/#docstrings",
            "text": "Searching within docstrings is simple with pynd. It works in a similar way\nas the other node matches, but it will output the full docstring and the \nclass or function that it is attached to.  $ pynd TODO --doc  The above search will find all docstrings that contain TODO. If no term is \nprovided, then all docstrings will be output.",
            "title": "Docstrings"
        },
        {
            "location": "/#supported-node-types",
            "text": "pynd currently supports the following node types.   --class  - Matches classes.  --def  - All function definitions.  --import  - matches import statements  --doc  - matches within docstrings",
            "title": "Supported Node Types"
        },
        {
            "location": "/#show-full-usage",
            "text": "usage :   pynd   [- h ]   [-- ignore - dir   [ IGNORE_DIR   [ IGNORE_DIR   ...]]]   [-- verbose ] \n             [-- debug ]   [-- ignore - case ]   [-- files - with - matches ]   [- d ]   [- c ]   [- f ] \n             [- i ] \n             [ PATTERN ]   [ FILES   OR   DIRECTORIES   [ FILES   OR   DIRECTORIES   ...]]  Search   for   PATTERN   in   each   Python   file   in   filesystem   from   the   current  directory   down .   If   any   files   or   directories   are   specified   then   only   those   are  checked .  positional   arguments : \n   PATTERN                 The   pattern   to   match   against .   This   must   be   a   valid \n                         Python   regular   expression . \n   FILES   OR   DIRECTORIES    A   file   or   directory   to   limit   the   search   scope .   This \n                         can   be   provided   multiple   times .  optional   arguments : \n   - h ,   -- help              show   this   help   message   and   exit \n   -- ignore - dir   [ IGNORE_DIR   [ IGNORE_DIR   ...]] \n                         A   pattern   to   exclude   directories .   This   must   be   a   valid \n                         Python   regular   expression .   It   can   be   provided   multiple \n                         times . \n   -- verbose               Explain   what   is   happening . \n   -- debug                 Output   excessively   to   make   debugging   easier \n   -- ignore - case           Make   all   the   regular   expression   matching   case \n                         insesitive . \n   -- files - with - matches    Don ' t   output   all   the   results ,   just   the   paths   to   files \n                         that   contain   a   result . \n   - d ,   -- doc               Match   class   and   function   docstrings . \n   - c ,   -- class             Match   class   names . \n   - f ,   -- def               Match   function   names . \n   - i ,   -- import            Match   imported   package   names.",
            "title": "Show full usage"
        }
    ]
}